#ifndef __LOADING_SCREEN_H
#define __LOADING_SCREEN_H



enum UINT8 
{
	LOADINGSCREEN_NOTHING,

	LOADINGSCREEN_HELI_CRASH,

	LOADINGSCREEN_DAY_SNOW,
	LOADINGSCREEN_NIGHT_SNOW,

	LOADINGSCREEN_GUARDPOST_DAY,
	LOADINGSCREEN_GUARDPOST_NIGHT,

	LOADINGSCREEN_POWERPLANT_DAY,
	LOADINGSCREEN_POWERPLANT_NIGHT,

	LOADINGSCREEN_DAYGENERIC,
	LOADINGSCREEN_NIGHTGENERIC,

	LOADINGSCREEN_DAYTOWN1,
	LOADINGSCREEN_DAYTOWN2,

	LOADINGSCREEN_NIGHTTOWN1,
	LOADINGSCREEN_NIGHTTOWN2,

	LOADINGSCREEN_DAYFOREST,
	LOADINGSCREEN_NIGHTFOREST,

	LOADINGSCREEN_MINE,
	LOADINGSCREEN_CAVE,
	LOADINGSCREEN_DAYPINE,
	LOADINGSCREEN_NIGHTPINE,

	LOADINGSCREEN_DAYMINE,
	LOADINGSCREEN_NIGHTMINE,

	LOADINGSCREEN_DAYWILD,
	LOADINGSCREEN_NIGHTWILD,

	LOADINGSCREEN_DOWN_STAIRS,
	LOADINGSCREEN_UP_STAIRS,

	LOADINGSCREEN_COMPLEX_BASEMENT,
	LOADINGSCREEN_COMPLEX_BASEMENT_GENERIC,

	LOADINGSCREEN_COMPLEX_TOP_LEVEL_DAY,
	LOADINGSCREEN_COMPLEX_TOP_LEVEL_NIGHT,

	LOADINGSCREEN_TUNNELS,

	NUM_LOADING_SCREENS
};



//For use by the game loader, before it can possibly know the situation.
extern UINT8 gubLastLoadingScreenID;

//returns the UINT8 ID for the specified sector.
UINT8 GetLoadScreenID( INT16 sSectorX, INT16 sSectorY, INT8 bSectorZ );

//sets up the loadscreen with specified ID, and draws it to the FRAME_BUFFER, 
//and refreshing the screen with it.
void DisplayLoadScreenWithID( UINT8 ubLoadScreenID );

#endif